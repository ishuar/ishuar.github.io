@use "../../_globalColor" as *;

// Variables
$base-spacing: 1rem;
$card-border-radius: 10px;
$transition-duration: 0.3s;

// Breakpoints using em for better scaling
$breakpoints: (
  'xs': 20em,
  // ~320px
  'sm': 36em,
  // ~576px
  'md': 48em,
  // ~768px
  'lg': 62em,
  // ~992px
  'xl': 75em,
  // ~1200px
);

// Font sizes with fluid typography
$font-size: (
  'heading': ('base': clamp(1.25rem, 5vw, 1.75rem),
    'large': clamp(1.5rem, 5vw, 2rem)),
  'role': ('base': clamp(1.125rem, 4vw, 1.5625rem),
    'large': clamp(1.25rem, 4vw, 1.50rem)),
  'date': ('base': clamp(0.85rem, 2.5vw, 1.1rem),
    'large': clamp(0.9rem, 3vw, 1.10rem)),
  'description': ('base': clamp(0.75rem, 2vw, .95rem)),
  'description-text': ('base': clamp(0.65rem, 2vw, 0.9rem))
);

// Mixins
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

@mixin high-dpi {

  @media (-webkit-min-device-pixel-ratio: 2),
  (min-resolution: 192dpi) {
    @content;
  }
}

// Fluid spacing utility
@function fluid-spacing($min, $max) {
  @return clamp(#{$min * $base-spacing}, #{($max - $min) * 2}vw, #{$max * $base-spacing});
}

// Container styles for grid layout
.experience-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 1400px;
  margin: fluid-spacing(2, 3.5) auto;
  padding: 0 fluid-spacing(0.5, 1.5);
}

.experience-heading {
  font-size: map-get(map-get($font-size, 'heading'), 'large');
  font-weight: 700;
  text-align: center;
  margin-bottom: fluid-spacing(1.5, 2.5);

  @include respond-to('md') {
    text-align: left;
    padding-left: fluid-spacing(0.5, 1);
  }
}

// Grid layout for cards
.experience-cards-div {
  display: grid;
  grid-template-columns: 1fr;
  gap: fluid-spacing(1.5, 2);
  width: 100%;

  @include respond-to('sm') {
    grid-template-columns: repeat(2, 1fr);
  }

  @include respond-to('lg') {
    grid-template-columns: repeat(3, 1fr);
  }

  @include respond-to('xl') {
    grid-template-columns: repeat(4, 1fr);
  }
}

// Experience card base styles
%experience-card-base {
  position: relative;
  border-radius: $card-border-radius;
  transition: transform $transition-duration ease, box-shadow $transition-duration ease;
  overflow: hidden;
  height: 100%;
  display: flex;
  flex-direction: column;

  &:hover {
    transform: translateY(-5px);
  }
}

// Card styles
.experience-card {
  @extend %experience-card-base;
  background-color: $lightBackground2;
  box-shadow: $lightBoxShadowDark 0px 10px 30px -15px;
  border: 1px solid $lightBorder1;

  &:hover {
    box-shadow: $lightBoxShadowDark 0px 20px 30px -10px;
  }
}

.experience-card-dark {
  @extend %experience-card-base;
  background-color: $darkBackground;
  box-shadow: $lightBoxShadowDark 0px 10px 30px -15px;
  border: 1px solid $lightBorder1;

  &:hover {
    box-shadow: $lightBoxShadowDark 0px 20px 30px -10px;
  }
}

.experience-banner {
  background-position: center;
  background-repeat: no-repeat;
  background-size: 150%;
  background: $experienceCardBannerLG;
  border-radius: $card-border-radius $card-border-radius 0 0;
  height: clamp(6rem, 15vh, 11rem);
  display: flex;
  align-items: flex-end;
  justify-content: center;
  filter: blur(0px);
}

.experience-blurred_div {
  position: absolute;
  background: $experienceCardBlurredDivLG;
  filter: blur(5px);
  height: clamp(6rem, 15vh, 11rem);
  top: 0;
  left: 0;
  width: 100%;
  border-radius: $card-border-radius $card-border-radius 0 0;
}

.experience-div-company {
  position: absolute;
  background: transparent;
  height: clamp(5rem, 12vh, 9rem);
  top: 0;
  left: 0;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 fluid-spacing(0.5, 1);
}

.experience-text-company {
  text-align: center;
  margin: 0;
  color: $lightBackground1;
  font-size: map-get(map-get($font-size, 'heading'), 'base');
  font-weight: 700;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  width: 100%;
  padding: fluid-spacing(0.5, 1);

  @include respond-to('md') {
    font-size: map-get(map-get($font-size, 'heading'), 'large');
  }
}

.experience-roundedimg {
  position: absolute;
  object-fit: cover;
  left: 0;
  right: 0;
  top: clamp(3.5rem, 10vh, 7rem);
  margin-left: auto;
  margin-right: auto;
  margin-bottom: auto;
  margin-top: auto;
  width: clamp(4.5rem, 12vw, 8rem);
  height: clamp(4.5rem, 12vw, 8rem);
  box-shadow: 0 0.5rem 1rem $lightBoxShadowDarker;
  border-radius: 50%;

  @include respond-to('sm') {
    width: clamp(4rem, 10vw, 6rem);
    height: clamp(4rem, 10vw, 6rem);
  }

  @include respond-to('md') {
    width: clamp(5rem, 12vw, 8rem);
    height: clamp(5rem, 12vw, 8rem);
  }
}

// Experience Role (Ex: SRE)
.experience-text-role {
  text-align: center;
  color: $textColor;
  font-weight: 700;
  font-size: map-get(map-get($font-size, 'role'), 'base');
  margin: inherit;
  padding-top: fluid-spacing(2.5, 3.0);
  line-height: 1;

  @include respond-to('md') {
    font-size: map-get(map-get($font-size, 'role'), 'large');
  }
}

.dark-mode-text {
  color: $textColorDark !important;
}

// Experience Date ( from - to )
.experience-text-date {
  text-align: center;
  color: $textColor;
  font-size: map-get(map-get($font-size, 'date'), 'base');
  margin: 0;
  padding-top: fluid-spacing(0.5, 1);
  font-weight: 300;

  @include respond-to('md') {
    font-size: map-get(map-get($font-size, 'date'), 'large');
  }
}

// Experience Summary
.experience-text-desc {
  text-align: center;
  font-size: map-get(map-get($font-size, 'description'), 'base');
  padding: 0 fluid-spacing(0.5, 1);
  margin-top: fluid-spacing(0.5, 1);
  line-height: 1.6;
  font-weight: 700;
  flex-grow: 1; // Allow description to expand to fill available space
}

// Experience/Tasks Bullet Points
.experience-text-details {
  padding: fluid-spacing(1, 1.5);
  margin-top: fluid-spacing(0.5, 1.5);
  font-size: map-get(map-get($font-size, 'description-text'), 'base');
}

// Ensure equal card heights in grid rows
.experience-card,
.experience-card-dark {
  display: flex;
  flex-direction: column;
  height: 100%;
}

// High-DPI optimizations
@include high-dpi {

  .experience-text-company,
  .experience-text-role,
  .experience-text-date,
  .experience-text-desc {
    // Ensure text is readable on high-DPI screens
    text-rendering: optimizeLegibility;
  }

  // Adjust card spacing for better touch interaction on high-DPI devices
  .experience-cards-div {
    gap: fluid-spacing(1, 1.5);
  }
}

// Touch device optimizations
@media (hover: none) {

  .experience-card,
  .experience-card-dark {
    &:hover {
      transform: none;
      box-shadow: $lightBoxShadowDark 0px 10px 30px -15px;
    }
  }

  // Increase touch targets
  .experience-text-details {
    padding: fluid-spacing(1.2, 1.8);
  }
}

// Small mobile specific adjustments
@media (max-width: map-get($breakpoints, 'sm')) {
  .experience-cards-div {
    grid-template-columns: 1fr;
    padding: 0 fluid-spacing(0.5, 1);
  }

  .experience-card,
  .experience-card-dark {
    max-width: 100%;
  }
}

// Print styles for accessibility
@media print {
  .experience-cards-div {
    display: block;
  }

  .experience-card,
  .experience-card-dark {
    page-break-inside: avoid;
    margin-bottom: 1rem;
    box-shadow: none !important;
    border: 1px solid #ddd !important;
  }
}
